/// <summary>
/// Печать разного рода рубрик.
/// </summary>
func print_subjects (tag, subjName)
{
    subjects = get_fields (tag)
    if (subjects)
    {
        carriage_return()
        i = 1
        foreach (subj in subjects)
        {
            if (i == 1) put (subjName, ": ") else put (" ")
            put (i, ". ")
            put (sub_field (subj, 'a'))
            put_p (sub_field (subj, 'b'), " - ")
            put_p (sub_field (subj, 'c'), " - ")
            put_p (sub_field (subj, 'd'), " - ")
            i++
            add_dot()
        }
    }
}

create_connection()
connect ("host=127.0.0.1;port=6666;user=librarian;password=secret;db=IBIS;")
if (!is_connected())
{
    error ("Not connected")
    return
}

read_record (2509079)

//==============================

workList = fm (920)

; // авторы, редакторы общей части
authors = get_fields (961)
foreach (author in authors)
{
    // автор - заголовок описания?
    if (sub_field (author, 'z'))
    {
        put (sub_field (author, 'a')) // фамилия
        put_p (sub_field (author, 'd'), " ") // римские цифры
        put_p (sub_field (author, 'g', 'b'), ", ") // инициалы и их расширение
        if (have_subfield (author, '1', 'c', 'f'))
        {
            // 1 - неотъемлемая часть имени
            // с - дополнения к именам, кроме дат
            // f - годы жизни
            put (" (")
            put_d ("; ", sub_field (author, 'c'), sub_field (author, 'f'))
            put (")")
        }

        add_dot()
        carriage_return()
    }
}

; // из общей части: основные сведения
commons = get_fields (461)
first = true
foreach (common in commons)
{
    if (!first and have_subfield (common, 'c'))
        add_dot()
    put (sub_field (common, 'c')) // заглавие
    first = false
}

foreach (common in commons)
{
    put_p (sub_field (common, 'e'), " : ") // сведения, относящиеся к заглавию
    put_p (sub_field (common, 'f'), " / ") // сведения об ответственности
}

; // города и издательства общей части
first = true
foreach (common in commons)
{
    d = ""
    if (first)
        add_separator()
    else
        d = " ; "
    if (!sub_field (common, '?')) // города не выводить
        put_p (sub_field (common, 'd'), d) // город
    put_p (sub_field (common, 'g'), " : ") // издательство
    first = false
}

; // годы общей части
foreach (common in commons)
{
    start = sub_field (common, 'h') // начало издания
    stop = sub_field (common, 'z') // окончание издания
    put_p (start, ", ")
    if (stop and stop != start)
    {
        put_p (stop, " - ")
    }
}

if (commons)
{
    add_dot()
    carriage_return()
}

; // первый автор
firstAuthor = get_field (700)
if (firstAuthor)
{
    put (sub_field (firstAuthor, 'a'))
    put_p (sub_field (firstAuthor, 'g', 'b'), ", ")
    add_dot()
    carriage_return ()
}

// область заглавия
title = get_field (200)
if (title)
{
    put_s (sub_field (title, 'v'), ": ")  // обозначение и номер тома
    put   (sub_field (title, 'a'))        // заглавие тома

    parallel = get_field (510) // параллельное заглавие
    put_p (sub_field (parallel, 'd'), " = ");

    put_p (sub_field (title, 'e'), " : ") // сведения, относящиеся к заглавию

    theIssue = get_field (923) // что за проблема с "issue"???
    if (theIssue)
    {
        if (put_p (sub_field (theIssue, 'h'), " ") // обозначение второй единицы деления
            or put_p (sub_field (theIssue, 'i'), " ")) // заглавие второй единицы деления
            add_dot()

        if (put_p (sub_field (theIssue, 'k'), " ") // обозначение третьей единицы деления
            or put_p (sub_field (theIssue, 'l'), " ")) // заглавие третьей единицы деления
            add_dot()
    }

    put_p (sub_field (title, 'f'), " / ") // первые сведения об ответственности
    put_p (sub_field (title, 'g'), " ; ") // последующие сведения об ответственности
}

; // сведения об издании
edition = get_field (205)
if (edition)
{
    add_separator()
    put (sub_field (edition, 'a'))
}

; // область специфических сведений

; // Выходные данные
imprint = get_field (210)
if (imprint)
{
    add_separator()
    set_mark()
    put (sub_field (imprint, 'a'))          // место издания
    put_p (sub_field (imprint, 'c'), " : ") // издательство
    d = (get_mark()) ? ", " : "";
    put_p (sub_field (imprint, 'd'), d)  // год издания
}

; // физические характеристики
physical = get_field (215)
if (physical)
{
    add_separator()
    put (sub_field (physical, 'a')) // объем
    unit = iif (sub_field (physical, '1'), "с.") // единица измерения
    put_p (unit, " ")
    put_p (sub_field (physical, 'c'), " : ") // иллюстрации
}

; // составная часть документа (статья в журнале)
mag = get_field (463)
if (mag)
{
    put (" // ")
    put (sub_field (mag, 'c'))
    put_p (sub_field (mag, 'e'), " : ") // сведения, относящиеся к заглавию
    add_separator()
    put (sub_field (mag, 'j')) // год издания
    add_separator()
    put (sub_field (mag, 'v')) // обозначение и номер первой единицы деления
    if (have_subfield (mag, 'a'))
    {
        put (sub_field (mag, 'a'))
        add_separator()
    }
    put (sub_field (mag, 'i'))
    add_separator()
    put ("С. ")
    put (sub_field (mag, 's'))
    add_dot()
}

; // библиография
bibliography = fma (320)
foreach (bib in bibliography)
{
    add_separator()
    put (bib)
}

; // серия
series = get_fields (225)
foreach (one in series)
{
    add_separator()
    put ("(")
    put (sub_field (one, 'a')) // наименование серии
    put_p (sub_field (one, 'd'), " = ") // параллельное наименование серии
    put_p (sub_field (one, 'e'), " : ") // сведения, относящиеся к наименованию серии
    put_p (sub_field (one, 'f'), " / ") // сведения об ответственности
    put_p (sub_field (one, 'x'), ". - ISSN ") // ISSN
    put_p (sub_field (one, 'v'), " ; ") // номер выпуска

    put (").")
}

; // ISBN и цена
isbn = get_fields (10)
foreach (one in isbn)
{
    price = sub_field (one, 'd')
    if (price)
    {
        add_separator()
        currency = iif (sub_field (one, 'c'), "руб.")
        put_s (price, " " + currency)
    }

    foreach (code in ['a', 'e', 'n'])
    {
        isbn1 = sub_field (one, code)
        if (isbn1)
        {
            add_separator()
            put_p (isbn1, "ISBN ")
        }
    }

    add_dot()
}

; // ISSN
issn = fm (11, 'a')
if (issn and issn != "XXXX-XXXX" and issn != "ХХХХ-ХХХХ")
{
    add_separator()
    put (issn)
    add_dot()
}

; // Страна издания
countries = fma (102)
if (countries)
{
    add_separator()
    put ((len (countries) != 1) ? "Страны: " : "Страна: ")
    put (join (", ", countries))
}

; // Язык документа
languages = fma (101)
if (languages)
{
    add_separator()
    put ((len (countries) != 1) ? "Языки: " : "Язык: ")
    put (join (", ", languages))
}

; // вид содержания, средства доступа и характеристика содержания
vs = get_fields (203)
foreach (one in vs)
{
    add_separator()
    put (sub_field (one, 'a'))
    put_ps (sub_field (one, 'o'), " (", ")")
    put_p (sub_field (one, 'c'), " : ")
    add_dot()
}

; // предметные рубрики
print_subjects (606, "Рубрики")

; // географические рубрики
print_subjects (607, "Географические рубрики")

; // ключевые слова
keywords = fma (610)
if (keywords)
{
    carriage_return()
    put ("Ключевые слова: ")
    put (join (", ", keywords))
}

; // экземпляры
exemplars = get_fields (910)
if (exemplars)
{
    carriage_return()
    put ("Экземпляры:")
}

foreach (one in exemplars)
{
    carriage_return()
    put_d (" - ", sub_field (one, 'b'), sub_field (one, 'd'))
}

flush_output()

//==============================

disconnect()
